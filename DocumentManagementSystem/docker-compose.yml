version: '3.8'

services:
  rest-server:
    container_name: rest-server
    image: document-management-system
    build:
      context: .
      dockerfile: REST/Dockerfile  # Specify the Dockerfile location inside the REST folder
    ports:
      - "8081:8081"  # Expose port 8081 both on the container and the host
    environment:
      - ASPNETCORE_ENVIRONMENT=Production  # Set the environment to production
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=dms_db;Username=dms_user;Password=dms_password  # Connection string to PostgreSQL
      - RabbitMQ__HostName=rabbitmq  # Connection string to RabbitMQ
      - Minio__Endpoint=minio:9000
      - Minio__AccessKey=minio
      - Minio__SecretKey=minio123
      - Minio__BucketName=uploads
    depends_on:
      - postgres
      - rabbitmq
      - minio
    volumes:
      - ./Logs:/app/Logs  # Persist logs
    networks:
      - dms-network

  worker-service:
    container_name: worker-service
    image: document-worker-service
    build:
      context: .
      dockerfile: DocumentWorkerService/Dockerfile  # Specify the Dockerfile location inside the Worker folder
    environment:
      - ASPNETCORE_ENVIRONMENT=Production  # Set the environment to production
      - RabbitMQ__HostName=rabbitmq  # RabbitMQ connection details
      - Minio__Endpoint=minio:9000
      - Minio__AccessKey=minio
      - Minio__SecretKey=minio123
      - Minio__BucketName=uploads
    depends_on:
      - rabbitmq
      - minio
    volumes:
      - ./Logs:/app/Logs
    networks:
      - dms-network

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: dms_user
      POSTGRES_PASSWORD: dms_password
      POSTGRES_DB: dms_db
    ports:
      - "5430:5432"  # Expose PostgreSQL port
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persist data
    networks:
      - dms-network

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management  # Use the RabbitMQ management image
    ports:
      - "5672:5672"  # Expose the RabbitMQ port
      - "9093:15672"  # Expose RabbitMQ Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    networks:
      - dms-network

  minio:
    container_name: minio
    image: minio/minio:latest
    ports:
      - "9000:9000"  # MinIO server port
      - "9090:9090"  # MinIO console port
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    command: server /data --console-address ":9090"
    networks:
      - dms-network
    volumes:
      - minio_data:/data  # Persist MinIO data

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
    build:
      context: ./WebServer
      dockerfile: Dockerfile
    depends_on:
      - rest-server
    networks:
      - dms-network
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200" # HTTP port
      - "9300:9300" # Transport port
    networks:
      - dms-network

networks:
  dms-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
